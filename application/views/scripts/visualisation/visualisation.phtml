<!DOCTYPE html>
<html>
<style>

body {
  font: 10px sans-serif;
}

.chart { 
  background: #fff;
}

p {
  font: 12px helvetica;
}


.axis path, .axis line {
  fill: none;
  stroke: #000;
  stroke-width: 2px;
  shape-rendering: crispEdges;
}


.tooltip {
	  position: absolute;
	  width: 300px;
	  height: 35px;
	  pointer-events: none;
	}

	input {
  display: inline-block;
  float: right;
}

</style>
<head>
  <meta charset="utf-8">
  <title><?php echo $this->titre;?></title>
  
  <script src="../js/date_fns.min.js"></script>
  <script src="../js/d3.v4.min.js"></script>
  <script src="../js/d3-scale-chromatic.v1.min.js"></script>  
  <script src="../js/d3-legend.min.js"></script>  
  <script src="../js/jquery.min.js"></script>
  <!-- <link rel="stylesheet" type="text/css" href="../css/w2ui-dark.css" /> -->
	<link rel="stylesheet" type="text/css" href="../css/w2ui.min.css" />
  <script src="../js/w2ui.js"></script>
      

</head>

<body>
	<script type="text/javascript">
			var resultJSON = <?php echo $this->resultJSON;?>;
			var emotionsJSON = <?php echo $this->emotionsJSON;?>;
			var formations = <?php echo $this->formations;?>;
			var emos = <?php echo $this->emos;?>;
			</script>
	<script src="../js/visu.js"></script>
	<div id="layout" style="position: absolute; top: 10px; left: 10px; bottom: 10px; right: 10px;"></div>



  <!-- <?php echo $this->resultJSON;?>
  <br>
  <br>
  <?php echo $this->dateJSON;?>
  <br>
  <br>
  <?php echo $this->emotionsJSON;?> -->

  <!-- <div id='titresViz'>
	  <h1 align="center"><?php echo $this->titre;?></h1>
	  <h2 align="center"><?php echo $this->soustitre;?></h2>
	  <p align="center" id="major">-</p>
  </div>
  <p align="center" id="viz">-</p>
  <div class="chart">
</div> -->

  <!-- <script>
var refData=[],refKey=[],refTag=[],legData={colors:[],labels:[]}, nbTotal=0, refTotal=[];
  	function tempsToDate(temps, type) {
	  	var dRef, arrTemps = temps.split('-')
	  	formatTemps = arrTemps.length;
	  	if(arrTemps.length==3){
			//vérifie la présence d'heure
			var arrTemps2 = arrTemps[2].split(' ');
			if(arrTemps2.length==1) dRef = [arrTemps[0], parseInt(arrTemps[1])-1, arrTemps[2], 0, 0, 0];
			else{
				var arrTemps3 = arrTemps2[1].split(':');
				formatTemps += arrTemps3.length;				
        			if(arrTemps3.length==1) dRef = [arrTemps[0], parseInt(arrTemps[1])-1, arrTemps2[0], arrTemps2[1], 0, 0];
        			if(arrTemps3.length==2) dRef = [arrTemps[0], parseInt(arrTemps[1])-1, arrTemps2[0], arrTemps3[0], arrTemps3[1], 0];		  	 
        			if(arrTemps3.length==3) dRef = [arrTemps[0], parseInt(arrTemps[1])-1, arrTemps2[0], arrTemps3[0], arrTemps3[1], arrTemps3[2]];		  	 
			}
		}
	  	if(arrTemps.length==2) dRef = [arrTemps[0], parseInt(arrTemps[1])-1, 1, 0, 0, 0];
		if(arrTemps.length==1) dRef = [arrTemps[0], 0, 1, 0, 0, 0];
		if(type=="utc") return Date.UTC(dRef[0], dRef[1], dRef[2], dRef[3], dRef[4], dRef[5]);
		else return new Date(dRef[0], dRef[1], dRef[2], dRef[3], dRef[4], dRef[5]);	
	}

	colorrange = ["#B30000", "#E34A33", "#FC8D59", "#FDBB84", "#FDD49E", "#FEF0D9", "#DD1BC6", "#8AD724"];
	strokecolor = colorrange[0];
	var keys = <?php echo $this->emotionsJSON;?>;
  var datearray = [];
  var parse = d3.timeParse("%Y-%m-%d %H:%M:%S");
  var data = <?php echo $this->resultJSON;?>;
  data.forEach(function(d){
    d.key = d.key;
    d.value = +d.value;
    d.date = parse(d.date);
  });

	  refTotal['total']=0;
	  data.forEach(function(dt){
		  //transforme le temps en date
		  var dRef = dt.date;		  
		  var k = dt.key+'-'+dRef;		  
		  refData[k] = dt;
		  //cumul les clefs
		  if(refKey.indexOf(dt.key)<0)refKey.push(dt.key);
		  //cumul les dates
		  if(!refTotal[dt.temps]){			  
			  refTotal[dt.temps]=Math.trunc(dt.value);
		  }else{
			  refTotal[dt.temps] += Math.trunc(dt.value);
		  }
		  refTotal['total'] += Math.trunc(dt.value);
		  
		  //cumul les tags
		  if(!refTag[dt.key]){			  
			  refTag[dt.key]={"type":dt.type,"desc":dt.desc,"value":Math.trunc(dt.value)};
		  }else{
			  refTag[dt.key].value += Math.trunc(dt.value);
		  }
		  
	  });
	  //création des couleurs et du tableau de la légende	  
	  var sc = d3.scaleLinear().range([0, 1]).domain([0, refKey.length+1]);
	  refKey.forEach(function(r,i){
		  nbTotal += refTag[r].value;
		  var numColor = sc(i);	  
		  refTag[r].color=d3.color(numColor);
		  legData.colors.push(refTag[r].color);		  
		  legData.labels.push(refTag[r].type);		  
	  });

  var nested_data = d3.nest ()
        .key(function(d) {return d.date;})
        .entries(data);
  var mqpdata = nested_data.map(function(d){
    var obj = {
      utc: d.key,
      dt: d.key,	      
    }
    
    d.values.forEach(function(v){
      obj[v.key] = v.value;
      		  	      
    })
    
    return obj;
  })
  var data = mqpdata;var stack = d3.stack()
	    .keys(keys)
	    .order(d3.stackOrderNone)
	    .offset(d3.stackOffsetWiggle);
	
	var series = stack(data);
	var divTitreHeight = document.getElementById('titresViz').clientHeight;	
	var margin = {top: 20, right: 30, bottom: 30, left: 30};
	var width = window.innerWidth - margin.left - margin.right;
	var height = window.innerHeight - margin.top - margin.bottom - divTitreHeight;
	var extData = d3.extent(data, function(d){ 
		return new Date(d.utc); 
		});
	var x = d3.scaleTime()
	    .domain([extData[0],extData[1]])
	    .range([margin.top, height-margin.bottom]);	
	  
	var y = d3.scaleLinear()
	    .domain([0, d3.max(series, function(layer) { return d3.max(layer, function(d){ return d[0] + d[1];}); })])
	    .range([width/2, margin.left+margin.right]);

	  var z = d3.scaleOrdinal()
      .range(colorrange);

	// setup axis
	var xAxis = d3.axisLeft(y);
	var yAxis = d3.axisBottom(x);
	
	
	var area = d3.area()
		.x(function(d) { 
      var yTest =x(new Date(d.data.utc));
			return yTest; 
			})
		.y0(function(d) { 
			var xTest = y(d[0]);
			return xTest; 
			})
		.y1(function(d) { 
			var xTest = y(d[1]);
			return xTest; 
			})
		.curve(d3.curveBasis);
	
	
		var tooltip = d3.select("body")
    .append("div")
    .attr("class", "remove")
    .style("position", "absolute")
    .style("z-index", "20")
    .style("visibility", "hidden")
    .style("top", "30px")
    .style("left", "55px");
	  
	var svg = d3.select("#viz").append("svg")
	    .attr("id", "svgGlobal")
	    .attr("width", width)
	    .attr("height", height);
	
	svg.selectAll("path")
	    .data(series)
	    .enter().append("path")
	    .attr("d", area)
	    .style("fill", function(d, i) { return z(i); })
	    .on('mouseover', function(d){
	    		colorInit = d3.select(this).style("fill");      
		    d3.select(this).style('fill',d3.rgb(colorInit).brighter());
			d3.select("#major").text(refTag[d.key].type);
			tooltip.transition()
               .duration(700)
               .style("opacity", 1);
	    })
			.on("mousemove", function(d, i) {
        mousex = d3.mouse(this);
        mousex = mousex[0];
        var invertedx = x.invert(mousex);
        var dateToCompare = new Date(invertedx);
        invertedx = invertedx.getMonth() + invertedx.getDate()+ invertedx.getHours() + invertedx.getMinutes();
        for (var k = 0; k < d.length; k++) {
          datearray[k] = d[k].data.utc;
        }
        var foundDate = dateFns.closestTo(dateToCompare,datearray);
        
        var foundDateIndex = dateFns.closestIndexTo(dateToCompare,datearray);
        
        pro = d[foundDateIndex].data[d.key];
        ladate = d[foundDateIndex].data.utc;

        d3.select(this)
        .classed("hover", true)
        .attr("stroke", strokecolor)
        .attr("stroke-width", "0.5px"), 
        tooltip.html( "<p>" + d.key + "<br>" + pro +"<br>"+ladate+ "</p>" ).style("visibility", "visible");
        
      })
			.on("mouseout", function(d, i) {
				d3.select(this).style('fill',d3.rgb(colorInit));
				svg.selectAll(".layer")
					.transition()
					.duration(250)
					.attr("opacity", "1");
					d3.select(this)
					.classed("hover", false)
					.attr("stroke-width", "0px"), tooltip.html( "<p>" + d.key + "<br>" + pro +"<br>"+ladate+ "</p>" ).style("visibility", "hidden");
			})

	//construction de l'axe y
	svg.append("g")
            .attr("class", "axis axis--y")
            .attr("transform", "translate(" + 0 + "," + 600 + ")")
            .call(yAxis);  

	var vertical = d3.select("#viz")
        .append("div")
        .attr("class", "remove")
        .style("position", "absolute")
        .style("z-index", "19")
        .style("width", "1px")
        .style("height", height)
        .style("top", "10px")
        .style("bottom", "30px")
        .style("left", "0px")
        .style("background", "#fff");

  d3.select("#viz")
      .on("mousemove", function(){  
         mousex = d3.mouse(this);
         mousex = mousex[0] + 5;
         vertical.style("left", mousex + "px" )})
      .on("mouseover", function(){  
         mousex = d3.mouse(this);
         mousex = mousex[0] + 5;
         vertical.style("left", mousex + "px")});

  </script> -->
</body>
</html>