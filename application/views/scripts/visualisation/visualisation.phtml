<!DOCTYPE html>
<html>
<style>

body {
  font: 10px sans-serif;
}

.chart { 
  background: #fff;
}

p {
  font: 12px helvetica;
}


.axis path, .axis line {
  fill: none;
  stroke: #000;
  stroke-width: 2px;
  shape-rendering: crispEdges;
}

button {
  position: absolute;
  right: 50px;
  top: 10px;
}

</style>
<head>
  <meta charset="utf-8">
  <title><?php echo $this->titre;?></title>
  <script src="../js/d3.v2.min.js"></script>
  <script src="../js/date_fns.min.js"></script>
  <!-- <script src="../js/d3.v4.min.js"></script>
  <script src="../js/d3-scale-chromatic.v1.min.js"></script>  
  <script src="../js/d3-legend.min.js"></script>   -->
  <script src="../js/jquery.min.js"></script>
  <script src="../js/w2ui.js"></script>
  <link rel="stylesheet" type="text/css" href="../css/w2ui-dark.css" />
      

</head>

<body>
  <!-- <p>Résultat :<br></p>
  <?php echo $this->resultJSON;?>
  <br>
  <br>
  <?php echo $this->dateJSON;?>
  <br>
  <br>
  <?php echo $this->emotionsJSON;?>
  <br>
  <br>
  <?php echo $this->message;?> -->

  <div id='titresViz'>
	  <h1 align="center"><?php echo $this->titre;?></h1>
	  <h2 align="center"><?php echo $this->soustitre;?></h2>
	  <p align="center" id="major">-</p>
  </div>
  <div class="chart">
</div>

  <script>
	// var data = <?=Zend_Json::encode($this->resultJSON)?>;
  var datearray = [];
  var format = d3.time.format("%Y-%m-%d %H:%M:%S");
  var data = <?php echo $this->resultJSON;?>;
  data.forEach(function(d){
    d.value = +d.value;
    d.date = format.parse(d.date);
  });
    // if (color == "blue") {
  colorrange = ["#B30000", "#E34A33", "#FC8D59", "#FDBB84", "#FDD49E", "#FEF0D9", "#DD1BC6", "#8AD724"];
  // }
  // else if (color == "pink") {
  //   colorrange = ["#980043", "#DD1C77", "#DF65B0", "#C994C7", "#D4B9DA", "#F1EEF6"];
  // }
  // else if (color == "orange") {
  //   colorrange = ["#B30000", "#E34A33", "#FC8D59", "#FDBB84", "#FDD49E", "#FEF0D9"];
  // }
  strokecolor = colorrange[0];


  var margin = {top: 20, right: 40, bottom: 30, left: 30};
  var width = document.body.clientWidth - margin.left - margin.right;
  var height = 400 - margin.top - margin.bottom;

  var tooltip = d3.select("body")
      .append("div")
      .attr("class", "tip")
      .style("position", "absolute")
      .style("z-index", "20")
      .style("visibility", "hidden")
      .style("top", "30px")
      .style("left", "55px");

  var x = d3.time.scale()
      .range([0, width]);

  var y = d3.scale.linear()
      .range([height-10, 0]);

  var z = d3.scale.ordinal()
      .range(colorrange);

  var xAxis = d3.svg.axis()
      .scale(x)
      .orient("bottom")
      .ticks(d3.time.weeks);

  var yAxis = d3.svg.axis()
      .scale(y);

  var yAxisr = d3.svg.axis()
      .scale(y);

  var stack = d3.layout.stack()
      .offset("zero")
      .values(function(d) { return d.values; })
      .x(function(d) { return d.date; })
      .y(function(d) { return d.value; });

  var nest = d3.nest()
      .key(function(d) { return d.key; });

  var area = d3.svg.area()
      .interpolate("cardinal")
      .x(function(d) { return x(d.date); })
      .y0(function(d) { return y(d.y0); })
      .y1(function(d) { return y(d.y0 + d.y); });

  var svg = d3.select(".chart").append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  // var graph = d3.csv(csvpath, function(data) {
    // data.forEach(function(d) {
    //   d.date = format.parse(d.date);
    //   d.value = +d.value;
    // });

var layers = stack(nest.entries(data));

x.domain(d3.extent(data, function(d) { return d.date; }));
y.domain([0, d3.max(data, function(d) { return d.y0 + d.y; })]);

svg.selectAll(".layer")
    .data(layers)
  .enter().append("path")
    .attr("class", "layer")
    .attr("d", function(d) { return area(d.values); })
    .style("fill", function(d, i) { return z(i); });


svg.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + height + ")")
    .call(xAxis);

// svg.append("g")
//     .attr("class", "y axis")
//     .attr("transform", "translate(" + width + ", 0)")
//     .call(yAxis.orient("right"));

// svg.append("g")
//     .attr("class", "y axis")
//     .call(yAxis.orient("left"));

svg.selectAll(".layer")
  .attr("opacity", 1)
  .on("mouseover", function(d, i) {
    svg.selectAll(".layer").transition()
    .duration(250)
    .attr("opacity", function(d, j) {
      return j != i ? 0.6 : 1;
  })})

  .on("mousemove", function(d, i) {
    mousex = d3.mouse(this);
    mousex = mousex[0];
    var invertedx = x.invert(mousex);
    var dateToCompare = new Date(invertedx);
    console.log("datetocompare : "+dateToCompare);
    invertedx = invertedx.getMonth() + invertedx.getDate()+ invertedx.getHours() + invertedx.getMinutes();
    var selected = (d.values);
    for (var k = 0; k < selected.length; k++) {
      datearray[k] = selected[k].date
      // datearray[k] = datearray[k].getMonth() + datearray[k].getDate() + datearray[k].getHours() + datearray[k].getMinutes();
    }
    var foundDate = dateFns.closestTo(dateToCompare,datearray);
    console.log("date trouvée : "+foundDate);
    var foundDateIndex = dateFns.closestIndexTo(dateToCompare,datearray);
    
    // mousedate = datearray.indexOf(invertedx);
    pro = d.values[foundDateIndex].value;
    ladate = d.values[foundDateIndex].date;

    // mousedate = datearray.indexOf(invertedx);
    // pro = d.values[mousedate].value;
    // ladate = d.values[mousedate].date;

    d3.select(this)
    .classed("hover", true)
    .attr("stroke", strokecolor)
    .attr("stroke-width", "0.5px"), 
    tooltip.html( "<p>" + d.key + "<br>" + pro +"<br>"+ladate+ "</p>" ).style("visibility", "visible");
    
  })
  .on("mouseout", function(d, i) {
   svg.selectAll(".layer")
    .transition()
    .duration(250)
    .attr("opacity", "1");
    d3.select(this)
    .classed("hover", false)
    .attr("stroke-width", "0px"), tooltip.html( "<p>" + d.key + "<br>" + pro +"<br>"+ladate+ "</p>" ).style("visibility", "hidden");
})
  
var vertical = d3.select(".chart")
      .append("div")
      .attr("class", "remove")
      .style("position", "absolute")
      .style("z-index", "19")
      .style("width", "1px")
      .style("height", "380px")
      .style("top", "10px")
      .style("bottom", "30px")
      .style("left", "0px")
      .style("background", "#fff");

d3.select(".chart")
    .on("mousemove", function(){  
       mousex = d3.mouse(this);
       mousex = mousex[0] + 5;
       vertical.style("left", mousex + "px" )})
    .on("mouseover", function(){  
       mousex = d3.mouse(this);
       mousex = mousex[0] + 5;
       vertical.style("left", mousex + "px")});

  // });

  </script>
</body>
</html>